services:
    # ----------------------
    # Keycloak and its Postgres database
    # ----------------------
    keycloak:
        hostname: keycloak
        build:
            context: .
            dockerfile: Dockerfile
            args:
                KEYCLOAK_VERSION: ${KEYCLOAK_VERSION}
        command: >
            start-dev
            --import-realm
            --log-level="INFO,org.keycloak.authentication.authenticators:DEBUG,no.fintlabs.authenticator:DEBUG"
        environment:
            KC_HTTP_ENABLED: "true"
            KC_HEALTH_ENABLED: "true"
            KC_HOSTNAME: "http://localhost:8890"
            KC_HOSTNAME_STRICT: "true"
            KC_DB: postgres
            KC_DB_URL_HOST: keycloak-pg
            KC_DB_URL_DATABASE: keycloak
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: password
            KC_DB_SCHEMA: public
            KC_BOOTSTRAP_ADMIN_USERNAME: admin
            KC_BOOTSTRAP_ADMIN_PASSWORD: admin
        ports:
            - "8890:8080"
            - "9900:9000"
        volumes:
            - ./config/kc:/opt/keycloak/data/import:ro
        depends_on:
            keycloak-pg:
                condition: service_healthy
            dex-entra-telemark:
                condition: service_healthy
            dex-entra-telemark-alt:
                condition: service_healthy
            dex-entra-novari:
                condition: service_healthy
            dex-idporten:
                condition: service_healthy
            dex-entra-rogaland:
                condition: service_healthy
            flais-keycloak-demo:
                condition: service_healthy
        profiles:
            - dev
        networks:
            - keycloak

    keycloak-test:
        hostname: keycloak-test
        build:
            context: .
            dockerfile: Dockerfile
            args:
                KEYCLOAK_VERSION: ${KEYCLOAK_VERSION}
        command: >
            start-dev
            --import-realm
            --log-level="INFO,org.keycloak.authentication.authenticators:DEBUG,no.fintlabs.authenticator:DEBUG"
        environment:
            KC_HTTP_ENABLED: "true"
            KC_HEALTH_ENABLED: "true"
            KC_HOSTNAME: "http://localhost:8890"
            KC_HOSTNAME_STRICT: "true"
            KC_DB: postgres
            KC_DB_URL_HOST: keycloak-pg-test
            KC_DB_URL_DATABASE: keycloak
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: password
            KC_DB_SCHEMA: public
            KC_BOOTSTRAP_ADMIN_USERNAME: admin
            KC_BOOTSTRAP_ADMIN_PASSWORD: admin
        ports:
            - "8890:8080"
            - "9900:9000"
        volumes:
            - ./config/kc:/opt/keycloak/data/import:ro
        depends_on:
            keycloak-pg-test:
                condition: service_healthy
            dex-entra-telemark:
                condition: service_healthy
            dex-entra-telemark-alt:
                condition: service_healthy
            dex-entra-novari:
                condition: service_healthy
            dex-idporten:
                condition: service_healthy
            dex-entra-rogaland:
                condition: service_healthy
            flais-keycloak-demo:
                condition: service_healthy
            flais-scim-client-telemark:
                condition: service_healthy
            flais-scim-client-rogaland:
                condition: service_healthy
        profiles:
            - test
        networks:
            - keycloak

    keycloak-pg:
        image: postgres:17.5
        volumes:
            - ./data/pg:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: keycloak
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: password
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U keycloak -d keycloak'"]
            interval: 10s
            timeout: 3s
            retries: 5
            start_period: 10s
        profiles:
            - dev
        networks:
            - keycloak

    keycloak-pg-test:
        image: postgres:17.5
        environment:
            POSTGRES_DB: keycloak
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: password
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U keycloak -d keycloak'"]
            interval: 10s
            timeout: 3s
            retries: 5
            start_period: 10s
        profiles:
            - test
        tmpfs:
            - /var/lib/postgresql/data
        networks:
            - keycloak

    # ----------------------
    # Dummy flais-keycloak-demo to respond to http requests
    # ----------------------
    flais-keycloak-demo:
        image: nginx:1.29.2-alpine
        hostname: flais-keycloak-demo
        ports:
            - "3000:80"
        volumes:
            - ./config/nginx/index.html:/usr/share/nginx/html/index.html:ro
            - ./config/nginx/web.conf:/etc/nginx/nginx.conf:ro
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -q --spider http://127.0.0.1/healthz || exit 1",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 5s
        networks:
            - keycloak

    # ----------------------
    # flais-scim-client
    # ----------------------
    flais-scim-client-telemark:
        hostname: flais-scim-client-telemark
        build:
            context: ./tools/flais-scim-client
            dockerfile: Dockerfile
        ports:
            - "9090:9090"
        environment:
            KEYCLOAK_BASE_URL: http://keycloak-test:8080
            TENANT_ID: 11111111-1111-1111-1111-111111111111
            AUDIENCE: 8adf8e6e-67b2-4cf2-a259-e3dc5476c621
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    'node -e "fetch(''http://127.0.0.1:9090/healthz'').then(r=>process.exit(r.status===200?0:1)).catch(()=>process.exit(1))"',
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 5s
        profiles:
            - test
        networks:
            - keycloak

    flais-scim-client-rogaland:
        hostname: flais-scim-client-rogaland
        build:
            context: ./tools/flais-scim-client
            dockerfile: Dockerfile
        ports:
            - "9091:9090"
        environment:
            KEYCLOAK_BASE_URL: http://keycloak-test:8080
            TENANT_ID: 22222222-2222-2222-2222-222222222222
            AUDIENCE: 4b51e5de-09c4-4f29-9d67-37b01f2c28f1
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    'node -e "fetch(''http://127.0.0.1:9090/healthz'').then(r=>process.exit(r.status===200?0:1)).catch(()=>process.exit(1))"',
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 5s
        profiles:
            - test
        networks:
            - keycloak

    # ----------------------
    # Dex providers
    # ----------------------
    dex-entra-telemark:
        image: ghcr.io/dexidp/dex:v2.44.0-alpine
        hostname: dex-entra-telemark
        command: ["dex", "serve", "/etc/dex/config.yaml"]
        ports: ["5556:5556"]
        volumes:
            - ./config/dex/entra-telemark.yaml:/etc/dex/config.yaml:ro
        restart: unless-stopped
        networks: [keycloak]
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -q -O - http://localhost:5556/dex/.well-known/openid-configuration >/dev/null 2>&1 || exit 1",
                ]
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 5s

    dex-entra-novari:
        image: ghcr.io/dexidp/dex:v2.44.0-alpine
        hostname: dex-entra-novari
        command: ["dex", "serve", "/etc/dex/config.yaml"]
        ports: ["5557:5556"]
        volumes:
            - ./config/dex/entra-novari.yaml:/etc/dex/config.yaml:ro
        restart: unless-stopped
        networks: [keycloak]
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -q -O - http://localhost:5556/dex/.well-known/openid-configuration >/dev/null 2>&1 || exit 1",
                ]
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 5s

    dex-idporten:
        image: ghcr.io/dexidp/dex:v2.44.0-alpine
        hostname: dex-idporten
        command: ["dex", "serve", "/etc/dex/config.yaml"]
        ports: ["5558:5556"]
        volumes:
            - ./config/dex/idporten.yaml:/etc/dex/config.yaml:ro
        restart: unless-stopped
        networks: [keycloak]
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -q -O - http://localhost:5556/dex/.well-known/openid-configuration >/dev/null 2>&1 || exit 1",
                ]
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 5s

    dex-entra-telemark-alt:
        image: ghcr.io/dexidp/dex:v2.44.0-alpine
        hostname: dex-entra-telemark-alt
        command: ["dex", "serve", "/etc/dex/config.yaml"]
        ports: ["5559:5556"]
        volumes:
            - ./config/dex/entra-telemark-alt.yaml:/etc/dex/config.yaml:ro
        restart: unless-stopped
        networks: [keycloak]
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -q -O - http://localhost:5556/dex/.well-known/openid-configuration >/dev/null 2>&1 || exit 1",
                ]
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 5s

    dex-entra-rogaland:
        image: ghcr.io/dexidp/dex:v2.44.0-alpine
        hostname: dex-entra-novari
        command: ["dex", "serve", "/etc/dex/config.yaml"]
        ports: ["5560:5556"]
        volumes:
            - ./config/dex/entra-rogaland.yaml:/etc/dex/config.yaml:ro
        restart: unless-stopped
        networks: [keycloak]
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "wget -q -O - http://localhost:5556/dex/.well-known/openid-configuration >/dev/null 2>&1 || exit 1",
                ]
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 5s

networks:
    keycloak:
