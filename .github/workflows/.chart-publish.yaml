name: Publish Chart

on:
  workflow_call:
    inputs:
      image_tags:
        description: "The image tag of the application"
        type: string
        required: true
      chart_name:
        description: "The name of the chart"
        type: string
        required: true

jobs:
  chart-meta:
    name: Apply Chart Metadata
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - id: commit-hash
        uses: prompt/actions-commit-hash@v3

      - id: versions
        run: |
          echo "chart_version=$(date +'%Y%m%d')-${{ steps.commit-hash.outputs.short }}" >> ${GITHUB_OUTPUT}

          full_tag="${{ inputs.image_tags }}"
          version="${full_tag##*:}"
          echo "Extracted version: $version"
          echo "app_version=$version" >> $GITHUB_OUTPUT

      - name: Update Chart.yaml
        uses: mikefarah/yq@v4.47.2
        with:
          cmd: |
            yq e -i '.version = "${{ steps.versions.outputs.chart_version }}"' ./charts/${{ inputs.chart_name }}/Chart.yaml
            yq e -i '.appVersion = "${{ steps.versions.outputs.app_version }}"' ./charts/${{ inputs.chart_name }}/Chart.yaml

      - name: Save Chart Meta
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ inputs.chart_name }}-chart-metadata
          path: ./charts/${{ inputs.chart_name }}/Chart.yaml

  publish-chart:
    name: Publish Helm Chart
    needs: chart-meta
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Restore Chart Metadata
        uses: actions/download-artifact@v5.0.0
        with:
          name: ${{ inputs.chart_name }}-chart-metadata
          path: ./charts/${{ inputs.chart_name }}

      - uses: azure/setup-helm@v4.3.1
        name: Setup Helm

      - name: Login to Flais Helm Repository
        run: echo "${{ secrets.FLAIS_HELM_PASSWORD }}" | helm registry login ${{ vars.FLAIS_HELM_ENDPOINT }} --username ${{ vars.FLAIS_HELM_USERNAME }} --password-stdin

      - name: Build Charts
        run: |
          helm package ./charts/${{ inputs.chart_name }} -d ./charts/${{ inputs.chart_name }}

      - name: Push Charts
        run: |
          helm push ./charts/${{ inputs.chart_name }}/*.tgz oci://${{ vars.FLAIS_HELM_ENDPOINT }}/helm
